{"version":3,"sources":["components/Control.module.css","components/Node.module.css","components/Map.module.css","store/initialState.js","components/Node.js","functions/helper.js","functions/recursiveBacktrackMaze.js","functions/index.js","functions/DFS.js","functions/BFS.js","functions/emptyMaze.js","functions/simpleRandomMaze.js","store/reducer.js","components/Control.js","store/context.js","components/NodeGrid.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Node","handleClick","handleMouseDown","nodeState","useState","nodeStyle","setNodeStyle","useEffect","isEnd","styles","dest","isPath","isStart","path","isVisited","visited","start","isVisitable","base","unvisitable","draggable","className","onClick","onMouseDown","MemoizedNode","React","memo","isValidCoord","coord","x","y","filter","el","length","getAround","map","dy","retval","forEach","i","newCoord","grid","push","mazeGetAround","dx","arr","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","mazeDFS","maze","startNew","pop","PATHFINDING_ALGORITHMS","DFS","open","closed","next","BFS","MAZE_ALGORITHMS","emptyMaze","temp","j","simpleRandomMaze","w","console","log","recursiveBacktrackMaze","mazeBase","CHANGE_PATHFINDING_ALGORITHM","CHANGE_MAZE_ALGORITHM","CHANGE_VISITABLE_FALSE","CHANGE_VISITABLE_TRUE","GENERATE_MAZE","CHANGE_VISITED_TRUE","CHANGE_PATH_TRUE","CHANGE_ACTION","CHANGE_START","CHANGE_DEST","RESET","reducer","state","action","newState","type","payload","row","col","pathfindingAlgorithm","mazeAlgorithm","newMaze","Control","isAuto","setIsAuto","isAnimated","setIsAnimated","isStarted","setIsStarted","dispatch","algorithm","setAlgorithm","setMaze","Container","maxWidth","Grid","container","item","xs","Card","elevation","CardHeader","title","CardContent","spacing","sm","InputLabel","id","Select","labelId","value","fullWidth","onChange","e","target","MenuItem","Typography","variant","style","paddingTop","paddingBottom","Button","startIcon","Flag","disabled","Refresh","RadioRounded","Clear","FormControlLabel","control","Switch","color","label","checked","paddingLeft","initialGrid","INITIAL_STATE","animation","Context","createContext","GlobalContext","children","useReducer","dispatchCallback","useCallback","Provider","NodeGrid","useContext","coord1","coord2","reversedClosed","reverse","currentNodeIndex","abs","reconstructPath","setTimeout","visitable","Map","GridMemo","useMemo","ControlMemo","App","margin","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4ea65d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-style\":\"Control_container-style__3C4Aq\",\"node-info\":\"Control_node-info__12vLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Node_base__3IvIQ\",\"start\":\"Node_start__1Gnel\",\"dest\":\"Node_dest__3yL6Z\",\"unvisitable\":\"Node_unvisitable__wlSVh\",\"to-unvisitable\":\"Node_to-unvisitable__-_nTB\",\"visited\":\"Node_visited__YfAdS\",\"to-visited\":\"Node_to-visited__1UbrG\",\"path\":\"Node_path__PN09j\",\"to-path\":\"Node_to-path__267eO\",\"to-dest\":\"Node_to-dest__1bZf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid-container\":\"Map_grid-container__2YzLb\",\"control-container\":\"Map_control-container__2Smc7\",\"main-container\":\"Map_main-container__1-f6b\"};","import { CHANGE_START } from \"./reducer\";\nimport { PATHFINDING_ALGORITHMS, MAZE_ALGORITHMS } from \"../functions\";\n\nlet initialGrid = [];\n\nfor (let i = 0; i < 20; i++) {\n  initialGrid = [...initialGrid, []];\n  for (let j = 0; j < 20; j++) {\n    initialGrid[i] = [\n      ...initialGrid[i],\n      {\n        id: i * 20 + j,\n        x: j,\n        y: i,\n        nodeState: {\n          isPath: false,\n          isVisited: false,\n          isVisitable: true,\n          isStart: i === 0 && j === 0,\n          isEnd: i === 19 && j === 19,\n        },\n      },\n    ];\n  }\n}\n\nexport const INITIAL_STATE = {\n  grid: initialGrid,\n  start: {\n    x: 0,\n    y: 0,\n  },\n  dest: {\n    x: 19,\n    y: 19,\n  },\n  action: CHANGE_START,\n  animation: true,\n  pathfindingAlgorithm: PATHFINDING_ALGORITHMS.BFS,\n  mazeAlgorithm: MAZE_ALGORITHMS.simpleRandomMaze,\n};\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Node.module.css\";\n\nconst Node = ({ handleClick, handleMouseDown, nodeState }) => {\n  const [nodeStyle, setNodeStyle] = useState(\"\");\n\n  useEffect(() => {\n    if (nodeState.isEnd) {\n      setNodeStyle(styles.dest);\n    } else if (nodeState.isPath && !nodeState.isStart) {\n      setNodeStyle(styles.path);\n    } else if (nodeState.isVisited && !nodeState.isStart) {\n      setNodeStyle(styles.visited);\n    } else if (nodeState.isStart) {\n      setNodeStyle(styles.start);\n    } else if (!nodeState.isVisitable) {\n      setNodeStyle(styles.unvisitable);\n    } else {\n      setNodeStyle(styles.base);\n    }\n  }, [\n    nodeState.isStart,\n    nodeState.isEnd,\n    nodeState.isVisitable,\n    nodeState.isVisited,\n    nodeState.isPath,\n  ]);\n\n  return (\n    <div\n      draggable={false}\n      className={nodeStyle}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    ></div>\n  );\n};\n\nexport const MemoizedNode = React.memo(Node);\n\nexport default Node;\n","export const isValidCoord = (coord) => {\n  return coord.x >= 0 && coord.y >= 0 && coord.x < 20 && coord.y < 20;\n};\n\nexport const isVisited = (coord, visited) => {\n  return (\n    visited.filter((el) => el.x === coord.x && el.y === coord.y).length !== 0\n  );\n};\n\nexport const isVisitable = (coord, grid) => {\n  return grid[coord.y][coord.x].nodeState.isVisitable;\n};\n\nexport const isReachable = (coord1, coord2) => {\n  if (Math.abs(coord1.x - coord2.x) <= 1 && coord1.y === coord2.y) {\n    return true;\n  } else if (Math.abs(coord1.y - coord2.y) <= 1 && coord1.x === coord2.x) {\n    return true;\n  }\n};\n\nconst shuffle = (arr) => {\n  let currentIndex = arr.length;\n  let temporaryValue;\n  let randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = temporaryValue;\n  }\n\n  return arr;\n};\n\nexport const getAround = (coord, visited, map) => {\n  const dx = [-1, 0, 1, 0];\n  const dy = [0, -1, 0, 1];\n  let retval = [];\n\n  dx.forEach((x, i) => {\n    let newCoord = { x: coord.x + x, y: coord.y + dy[i] };\n    if (\n      isValidCoord(newCoord) &&\n      !isVisited(newCoord, visited) &&\n      isVisitable(newCoord, map)\n    ) {\n      retval.push(newCoord);\n    }\n  });\n\n  return retval;\n};\n\nexport const mazeGetAround = (coord, visited) => {\n  const dx = [0, 0, 2, -2];\n  const dy = [2, -2, 0, 0];\n  let retval = [];\n\n  for (let i = 0; i < 4; i++) {\n    let newCoord = { x: coord.x + dx[i], y: coord.y + dy[i] };\n    if (isValidCoord(newCoord) && !isVisited(newCoord, visited)) {\n      retval.push(newCoord);\n    }\n  }\n\n  return shuffle(retval);\n};\n\nexport const reconstructPath = (closed) => {\n  let reversedClosed = [...closed].reverse();\n  let currentNodeIndex = 0;\n  let path = [reversedClosed[currentNodeIndex]];\n\n  for (let i = 1; i < reversedClosed.length; i++) {\n    if (isReachable(reversedClosed[currentNodeIndex], reversedClosed[i])) {\n      path.push(reversedClosed[i]);\n      currentNodeIndex = i;\n    }\n  }\n\n  return path;\n};\n\nexport const mazeBase = () => {\n  let maze = [];\n  let temp = [];\n\n  for (let i = 0; i < 20; i++) {\n    temp = [];\n    for (let j = 0; j < 20; j++) {\n      temp.push(j % 2 !== 0 ? (i % 2 === 0 ? \"#\" : \"*\") : \"#\");\n    }\n    maze.push(temp);\n  }\n\n  return maze;\n};\n","import { mazeBase, mazeGetAround, isVisited } from \"./helper\";\n\nconst mazeDFS = (start, maze, visited = []) => {\n  visited.push(start);\n\n  while (mazeGetAround(start, visited).length !== 0) {\n    let startNew = mazeGetAround(start, visited).pop();\n    maze[(start.y + startNew.y) / 2][(start.x + startNew.x) / 2] = \"*\";\n    if (!isVisited(startNew, visited)) {\n      mazeDFS(startNew, maze, visited);\n    }\n  }\n};\n\nexport const recursiveBacktrackMaze = () => {\n  let retval = mazeBase();\n  mazeDFS({ x: 1, y: 1 }, retval);\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n  return retval;\n};\n","import { BFS } from \"./BFS\";\nimport { DFS } from \"./DFS\";\nimport { emptyMaze } from \"./emptyMaze\";\nimport { simpleRandomMaze } from \"./simpleRandomMaze\";\nimport { recursiveBacktrackMaze } from \"./recursiveBacktrackMaze\";\n\nexport const PATHFINDING_ALGORITHMS = { DFS: DFS, BFS: BFS };\nexport const MAZE_ALGORITHMS = {\n  emptyMaze: emptyMaze,\n  simpleRandomMaze: simpleRandomMaze,\n  recursiveBacktrackMaze: recursiveBacktrackMaze,\n};\n","import { getAround, isVisited } from \"./helper\";\n\nexport const DFS = (start, dest, map, open = [], closed = []) => {\n  open.push(...getAround(start, closed, map));\n  closed.push(start);\n\n  while (open.length !== 0) {\n    let next = open.pop();\n    if (\n      closed.filter((coord) => coord.x === dest.x && coord.y === dest.y)\n        .length !== 0\n    ) {\n      break;\n    } else {\n      if (!isVisited(next, closed)) {\n        DFS(next, dest, map, open, closed);\n      }\n    }\n  }\n};\n","import { getAround, isVisited } from \"./helper\";\n\nexport const BFS = (start, dest, map, open = [], closed = []) => {\n  open = [...getAround(start, closed, map), ...open];\n  closed.push(start);\n\n  while (open.length !== 0) {\n    let next = open.pop();\n    if (\n      closed.filter((coord) => coord.x === dest.x && coord.y === dest.y)\n        .length !== 0\n    ) {\n      break;\n    } else {\n      if (!isVisited(next, closed)) {\n        BFS(next, dest, map, open, closed);\n      }\n    }\n  }\n};\n","export const emptyMaze = () => {\n  let retval = [];\n  let temp = [];\n\n  for (let i = 0; i < 20; i++) {\n    temp = [];\n    for (let j = 0; j < 20; j++) {\n      temp.push(\"*\");\n    }\n    retval.push(temp);\n  }\n\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n\n  return retval;\n};\n","export const simpleRandomMaze = (w = 3) => {\n  let retval = [];\n  for (let i = 0; i < 20; i++) {\n    let temp = [];\n    for (let j = 0; j < 20; j++) {\n      Math.random() * 10 > w ? temp.push(\"*\") : temp.push(\"#\");\n    }\n    retval.push(temp);\n  }\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n\n  console.log(retval);\n  return retval;\n};\n","import { PATHFINDING_ALGORITHMS, MAZE_ALGORITHMS } from \"../functions\";\n\nexport const CHANGE_PATHFINDING_ALGORITHM = \"CHANGE_PATHFINDING_ALGORITHM\";\nexport const CHANGE_MAZE_ALGORITHM = \"CHANGE_MAZE_ALGORITHM\";\nexport const CHANGE_VISITABLE_FALSE = \"CHANGE_VISITABLE_FALSE\";\nexport const CHANGE_VISITABLE_TRUE = \"CHANGE_VISITABLE_TRUE\";\nexport const GENERATE_MAZE = \"GENERATE_MAZE\";\nexport const CHANGE_VISITED_FALSE = \"CHANGE_VISITED_FALSE\";\nexport const CHANGE_VISITED_TRUE = \"CHANGE_VISITED_TRUE\";\nexport const CHANGE_PATH_FALSE = \"CHANGE_PATH_FALSE\";\nexport const CHANGE_PATH_TRUE = \"CHANGE_PATH_TRUE\";\nexport const CHANGE_ACTION = \"CHANGE_ACTION\";\nexport const CHANGE_START = \"CHANGE_START\";\nexport const CHANGE_DEST = \"CHANGE_DEST\";\nexport const CLEAR = \"CLEAR\";\nexport const RESET = \"RESET\";\n\nexport const reducer = (state, action) => {\n  const newState = { ...state };\n\n  switch (action.type) {\n    case CHANGE_ACTION:\n      newState.action = action.payload;\n      break;\n    case CHANGE_START:\n      newState.grid[state.start.y][state.start.x].nodeState.isStart = false;\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isStart = true;\n      newState.start = {\n        x: action.payload.x,\n        y: action.payload.y,\n      };\n      break;\n    case CHANGE_DEST:\n      newState.grid[state.dest.y][state.dest.x].nodeState.isEnd = false;\n      newState.grid[action.payload.y][action.payload.x].nodeState.isEnd = true;\n      newState.dest = {\n        x: action.payload.x,\n        y: action.payload.y,\n      };\n      break;\n    case RESET:\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isPath: false,\n          },\n        }))\n      );\n      break;\n    case CLEAR:\n      newState.grid[state.start.y][state.start.x].nodeState.isStart = false;\n      newState.grid[state.dest.y][state.dest.x].nodeState.isEnd = false;\n      newState.grid[0][0].nodeState.isStart = true;\n      newState.grid[19][19].nodeState.isEnd = true;\n      newState.start = { x: 0, y: 0 };\n      newState.dest = { x: 19, y: 19 };\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isVisitable: true,\n            isPath: false,\n          },\n        }))\n      );\n      break;\n    case CHANGE_VISITABLE_TRUE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisitable = true;\n      break;\n    case CHANGE_VISITABLE_FALSE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisitable = false;\n      break;\n    case CHANGE_VISITED_TRUE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisited = true;\n      break;\n    case CHANGE_VISITED_FALSE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisited = false;\n      break;\n    case CHANGE_PATH_TRUE:\n      newState.grid[action.payload.y][action.payload.x].nodeState.isPath = true;\n      break;\n    case CHANGE_PATH_FALSE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isPath = false;\n      break;\n    case CHANGE_PATHFINDING_ALGORITHM:\n      newState.pathfindingAlgorithm = PATHFINDING_ALGORITHMS[action.payload];\n      break;\n    case CHANGE_MAZE_ALGORITHM:\n      newState.mazeAlgorithm = MAZE_ALGORITHMS[action.payload];\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isVisitable: true,\n            isPath: false,\n          },\n        }))\n      );\n      let maze = newState.mazeAlgorithm();\n      for (let i = 0; i < 20; i++) {\n        for (let j = 0; j < 20; j++) {\n          switch (maze[i][j]) {\n            case \"#\":\n              newState.grid[j][i].nodeState.isVisitable = false;\n              break;\n            case \"*\":\n              newState.grid[j][i].nodeState.isVisitable = true;\n              break;\n            case \"s\":\n              newState.grid[j][i].nodeState.isStart = true;\n              newState.grid[newState.start.y][\n                newState.start.x\n              ].nodeState.isStart = false;\n              newState.start = { x: i, y: j };\n              break;\n            case \"d\":\n              newState.grid[j][i].nodeState.isEnd = true;\n              newState.grid[newState.dest.y][\n                newState.dest.x\n              ].nodeState.isEnd = false;\n              newState.dest = { x: i, y: j };\n              break;\n            default:\n              break;\n          }\n        }\n      }\n      break;\n    case GENERATE_MAZE:\n      let newMaze = newState.mazeAlgorithm();\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isVisitable: true,\n            isPath: false,\n          },\n        }))\n      );\n      for (let i = 0; i < 20; i++) {\n        for (let j = 0; j < 20; j++) {\n          switch (newMaze[i][j]) {\n            case \"#\":\n              newState.grid[j][i].nodeState.isVisitable = false;\n              break;\n            case \"*\":\n              newState.grid[j][i].nodeState.isVisitable = true;\n              break;\n            case \"s\":\n              newState.grid[j][i].nodeState.isStart = true;\n              newState.grid[newState.start.y][\n                newState.start.x\n              ].nodeState.isStart = false;\n              newState.start = { x: i, y: j };\n              break;\n            case \"d\":\n              newState.grid[j][i].nodeState.isEnd = true;\n              newState.grid[newState.dest.y][\n                newState.dest.x\n              ].nodeState.isEnd = false;\n              newState.dest = { x: i, y: j };\n              break;\n            default:\n              break;\n          }\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return newState;\n};\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Select,\n  MenuItem,\n  InputLabel,\n  CardHeader,\n  Typography,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\nimport { Clear, Flag, RadioRounded, Refresh } from \"@material-ui/icons\";\nimport Node from \"./Node\";\nimport styles from \"./Control.module.css\";\nimport {\n  CHANGE_DEST,\n  CHANGE_START,\n  CHANGE_VISITABLE_TRUE,\n  CHANGE_VISITABLE_FALSE,\n  CHANGE_ACTION,\n  RESET,\n  CHANGE_PATHFINDING_ALGORITHM,\n  CHANGE_MAZE_ALGORITHM,\n  GENERATE_MAZE,\n} from \"../store/reducer\";\n\nconst Control = ({\n  isAuto,\n  setIsAuto,\n  isAnimated,\n  setIsAnimated,\n  isStarted,\n  setIsStarted,\n  dispatch,\n}) => {\n  const [algorithm, setAlgorithm] = useState(\"BFS\");\n  const [maze, setMaze] = useState(\"simpleRandomMaze\");\n\n  const handleAlgorithmChange = (e) => {\n    setAlgorithm(e.target.value);\n    dispatch({\n      type: CHANGE_PATHFINDING_ALGORITHM,\n      payload: e.target.value,\n    });\n  };\n\n  const handleMazeChange = (e) => {\n    dispatch({ type: \"CLEAR\" });\n    setMaze(e.target.value);\n    dispatch({\n      type: CHANGE_MAZE_ALGORITHM,\n      payload: e.target.value,\n    });\n  };\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\" className={styles[\"container-style\"]}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Card elevation={3}>\n              <CardHeader title={\"Pathfinding Demo\"} />\n              <CardContent>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12} sm={6}>\n                        <InputLabel id=\"alg-label\">Select Algorithm</InputLabel>\n                        <Select\n                          labelId=\"alg-label\"\n                          value={algorithm}\n                          fullWidth={true}\n                          onChange={handleAlgorithmChange}\n                        >\n                          <MenuItem value=\"BFS\">Breadth First Search</MenuItem>\n                          <MenuItem value=\"DFS\">Depth First Search</MenuItem>\n                        </Select>\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <InputLabel id=\"alg-label\">\n                          Select Maze Generator\n                        </InputLabel>\n                        <Select\n                          labelId=\"alg-label\"\n                          fullWidth={true}\n                          onChange={handleMazeChange}\n                          value={maze}\n                        >\n                          <MenuItem value=\"emptyMaze\">Empty Maze</MenuItem>\n                          <MenuItem value=\"simpleRandomMaze\">\n                            Simple Random Maze\n                          </MenuItem>\n                          <MenuItem value=\"recursiveBacktrackMaze\">\n                            Recursize Backtrack Maze\n                          </MenuItem>\n                        </Select>\n                      </Grid>\n                    </Grid>\n                    <Grid container>\n                      <Grid item xs={12} sm={6}>\n                        <Typography\n                          variant=\"h5\"\n                          style={{ paddingTop: \"2rem\", paddingBottom: \"1rem\" }}\n                        >\n                          Actions\n                        </Typography>\n                        <Button\n                          variant=\"outlined\"\n                          startIcon={<Flag />}\n                          onClick={() => setIsStarted(true)}\n                          disabled={isStarted}\n                        >\n                          Start\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          startIcon={<Refresh />}\n                          onClick={() => dispatch({ type: RESET })}\n                          disabled={isStarted}\n                        >\n                          Reset\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          startIcon={<RadioRounded />}\n                          onClick={() => dispatch({ type: GENERATE_MAZE })}\n                          disabled={isStarted}\n                        >\n                          Maze\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          startIcon={<Clear />}\n                          onClick={() => dispatch({ type: \"CLEAR\" })}\n                          disabled={isStarted}\n                        >\n                          Clear\n                        </Button>\n                        <Typography\n                          variant=\"h5\"\n                          style={{ paddingTop: \"2rem\", paddingBottom: \"1rem\" }}\n                        >\n                          Options\n                        </Typography>\n                        <FormControlLabel\n                          control={<Switch color=\"primary\" />}\n                          label=\"Enable Animation\"\n                          checked={isAuto ? false : isAnimated}\n                          onChange={() =>\n                            setIsAnimated(isAuto ? false : !isAnimated)\n                          }\n                          disabled={isAuto}\n                        />\n                        <br />\n                        <FormControlLabel\n                          control={<Switch color=\"primary\" />}\n                          label=\"Auto Solve\"\n                          checked={isAuto}\n                          onChange={() => setIsAuto(!isAuto)}\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" style={{ paddingTop: \"2rem\" }}>\n                          Legend\n                        </Typography>\n                        <div\n                          className={styles[\"node-info\"]}\n                          onClick={() =>\n                            dispatch({\n                              type: CHANGE_ACTION,\n                              payload: CHANGE_START,\n                            })\n                          }\n                        >\n                          <Node nodeState={{ isStart: true }} />\n                          <Typography\n                            variant=\"body1\"\n                            style={{ paddingLeft: \"1rem\" }}\n                          >\n                            Start Node\n                          </Typography>\n                        </div>\n                        <div\n                          className={styles[\"node-info\"]}\n                          onClick={() =>\n                            dispatch({\n                              type: CHANGE_ACTION,\n                              payload: CHANGE_DEST,\n                            })\n                          }\n                        >\n                          <Node nodeState={{ isEnd: true }} />\n                          <Typography\n                            variant=\"body1\"\n                            style={{ paddingLeft: \"1rem\" }}\n                          >\n                            Destination Node\n                          </Typography>\n                        </div>\n                        <div\n                          className={styles[\"node-info\"]}\n                          onClick={() =>\n                            dispatch({\n                              type: CHANGE_ACTION,\n                              payload: CHANGE_VISITABLE_TRUE,\n                            })\n                          }\n                        >\n                          <Node nodeState={{ isVisitable: true }} />\n                          <Typography\n                            variant=\"body1\"\n                            style={{ paddingLeft: \"1rem\" }}\n                          >\n                            Unvisited Node\n                          </Typography>\n                        </div>\n                        <div\n                          className={styles[\"node-info\"]}\n                          onClick={() =>\n                            dispatch({\n                              type: CHANGE_ACTION,\n                              payload: CHANGE_VISITABLE_FALSE,\n                            })\n                          }\n                        >\n                          <Node nodeState={{ isVisitable: false }} />\n                          <Typography\n                            variant=\"body1\"\n                            style={{ paddingLeft: \"1rem\" }}\n                          >\n                            Unvisitable Node\n                          </Typography>\n                        </div>\n                        <div className={styles[\"node-info\"]}>\n                          <Node nodeState={{ isVisited: true }} />\n                          <Typography\n                            variant=\"body1\"\n                            style={{ paddingLeft: \"1rem\" }}\n                          >\n                            Visited Node\n                          </Typography>\n                        </div>\n                        <div className={styles[\"node-info\"]}>\n                          <Node nodeState={{ isPath: true }} />\n                          <Typography\n                            variant=\"body1\"\n                            style={{ paddingLeft: \"1rem\" }}\n                          >\n                            Path Node\n                          </Typography>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Control;\n","import React, { createContext, useReducer, useCallback } from \"react\";\nimport { INITIAL_STATE } from \"./initialState\";\nimport { reducer } from \"./reducer\";\n\nexport const Context = createContext(null);\n\nexport const GlobalContext = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, { ...INITIAL_STATE });\n\n  const dispatchCallback = useCallback((action) => {\n    dispatch(action);\n  }, []);\n\n  return (\n    <Context.Provider value={{ state: state, dispatch: dispatchCallback }}>\n      {children}\n    </Context.Provider>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { MemoizedNode } from \"./Node\";\nimport { Context } from \"../store/context\";\nimport {\n  CHANGE_DEST,\n  CHANGE_START,\n  CHANGE_VISITABLE_TRUE,\n  CHANGE_VISITABLE_FALSE,\n  CHANGE_VISITED_TRUE,\n  CHANGE_PATH_TRUE,\n  RESET,\n} from \"../store/reducer\";\nimport { reconstructPath } from \"../functions/helper\";\n\nconst NodeGrid = ({\n  isAuto,\n  setIsAuto,\n  isAnimated,\n  setIsAnimated,\n  isStarted,\n  setIsStarted,\n}) => {\n  const { state, dispatch } = useContext(Context);\n\n  useEffect(() => {\n    if (isStarted || isAuto) {\n      dispatch({ type: RESET });\n      let closed = [];\n      let open = [];\n      let path = [];\n\n      state.pathfindingAlgorithm(\n        state.start,\n        state.dest,\n        state.grid,\n        open,\n        closed\n      );\n\n      path = reconstructPath(closed);\n\n      if (isAnimated && !isAuto) {\n        for (let i = 0; i < closed.length; i++) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: CHANGE_VISITED_TRUE,\n                payload: { x: closed[i].x, y: closed[i].y },\n              }),\n            10\n          );\n        }\n        for (let i = 0; i < path.length; i++) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: CHANGE_PATH_TRUE,\n                payload: { x: path[i].x, y: path[i].y },\n              }),\n            10\n          );\n        }\n        setTimeout(\n          () => setIsStarted(false),\n          10 * (closed.length + path.length)\n        );\n      } else {\n        for (let i = 0; i < closed.length; i++) {\n          dispatch({\n            type: CHANGE_VISITED_TRUE,\n            payload: { x: closed[i].x, y: closed[i].y },\n          });\n        }\n        for (let i = 0; i < path.length; i++) {\n          dispatch({\n            type: CHANGE_PATH_TRUE,\n            payload: { x: path[i].x, y: path[i].y },\n          });\n        }\n        setIsStarted(false);\n      }\n    }\n  }, [isStarted, isAnimated, isAuto, state.dest, state.start]);\n\n  const handleClick = (x, y) => {\n    if (state.action === CHANGE_DEST || state.action === CHANGE_START)\n      dispatch({\n        type: state.action,\n        payload: { x, y },\n      });\n  };\n\n  const handleMouseDown = (x, y) => {\n    if (state.action === CHANGE_VISITABLE_TRUE) {\n      dispatch({\n        type: state.action,\n        payload: { x, y, visitable: true },\n      });\n    } else if (state.action === CHANGE_VISITABLE_FALSE) {\n      dispatch({\n        type: state.action,\n        payload: { x, y, visitable: false },\n      });\n    }\n  };\n\n  return (\n    <>\n      {state.grid.map((row) =>\n        row.map((col) => (\n          <MemoizedNode\n            handleClick={() => handleClick(col.x, col.y)}\n            handleMouseDown={() => handleMouseDown(col.x, col.y)}\n            key={col.id}\n            nodeState={col.nodeState}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nexport default NodeGrid;\n","import React, { useState, useMemo, useContext } from \"react\";\nimport styles from \"./Map.module.css\";\nimport Control from \"./Control\";\nimport NodeGrid from \"./NodeGrid\";\nimport { Context } from \"../store/context\";\n\nconst Map = () => {\n  console.log(\"P\");\n  const { dispatch } = useContext(Context);\n  const [isAuto, setIsAuto] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(true);\n\n  const GridMemo = useMemo(\n    () => (\n      <NodeGrid\n        isAuto={isAuto}\n        setIsAuto={setIsAuto}\n        isAnimated={isAnimated}\n        setIsAnimated={setIsAnimated}\n        isStarted={isStarted}\n        setIsStarted={setIsStarted}\n      />\n    ),\n    [isAuto, setIsAuto, isAnimated, setIsAnimated, isStarted, setIsStarted]\n  );\n\n  const ControlMemo = useMemo(\n    () => (\n      <Control\n        isAuto={isAuto}\n        setIsAuto={setIsAuto}\n        isAnimated={isAnimated}\n        setIsAnimated={setIsAnimated}\n        isStarted={isStarted}\n        setIsStarted={setIsStarted}\n        dispatch={dispatch}\n      />\n    ),\n    [\n      isAuto,\n      setIsAuto,\n      isAnimated,\n      setIsAnimated,\n      isStarted,\n      setIsStarted,\n      dispatch,\n    ]\n  );\n\n  return (\n    <>\n      <div className={styles[\"main-container\"]}>\n        <div className={styles[\"grid-container\"]} draggable={false}>\n          {GridMemo}\n        </div>\n        <div className={styles[\"control-container\"]}>{ControlMemo}</div>\n      </div>\n    </>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport Map from \"./components/Map\";\nimport { GlobalContext } from \"./store/context\";\n\nconst App = () => {\n  return (\n    <div style={{ margin: 0, padding: 0 }}>\n      <GlobalContext>\n        <Map />\n      </GlobalContext>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}