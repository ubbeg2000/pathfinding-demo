{"version":3,"sources":["components/Node.module.css","components/ControlsTab.module.css","components/Map.module.css","components/Control.module.css","store/initialState.js","functions/helper.js","functions/BFS.js","functions/DFS.js","functions/Astar.js","functions/recursiveBacktrackMaze.js","functions/recursiveDivisionMaze.js","functions/index.js","functions/Dijkstra.js","functions/emptyMaze.js","functions/simpleRandomMaze.js","store/reducer.js","components/Node.js","components/ControlsTab.js","assets/mazes.gif","assets/bfs.gif","assets/8way.gif","assets/actions.gif","assets/options.gif","components/HelpTab.js","assets/author.jpg","components/AboutTab.js","components/Control.js","store/context.js","components/NodeGrid.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","isValidCoord","coord","x","y","isVisited","visited","filter","el","length","isVisitable","grid","nodeState","isReachable","coord1","coord2","is8Way","xdist","Math","abs","ydist","getAround","map","dx","dy","retval","i","newCoord","push","mazeGetAround","arr","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","reconstructPath","closed","reversedClosed","reverse","currentNodeIndex","path","isSolved","dest","isIn","BFSHelper","start","open","next","pop","BFS","DFSHelper","DFS","manhattanDistance","pythagoreanDistance","sqrt","mininumFScoreOf","scoreMatrix","nodes","min","f","BaseAstar","tempGScore","heuristicFunction","neighbors","temp","g","parent","current","node","cur","neighbor","mazeDFS","maze","startNew","randomEven","lower","upper","n","randomOdd","recursiveDivision","bounds","width","height","wall","hole","direction","ux","lx","uy","ly","PATHFINDING_ALGORITHMS","ManhattanAstar","PythagoreanAstar","Dijkstra","MAZE_ALGORITHMS","emptyMaze","j","simpleRandomMaze","w","console","log","recursiveBacktrackMaze","mazeBase","recursiveDivisionMaze","forEach","row","join","CHANGE_PATHFINDING_ALGORITHM","CHANGE_MAZE_ALGORITHM","CHANGE_VISITABLE_FALSE","CHANGE_VISITABLE_TRUE","GENERATE_MAZE","CHANGE_VISITED_TRUE","CHANGE_PATH_TRUE","CHANGE_ACTION","CHANGE_START","CHANGE_DEST","RESET","reducer","state","action","newState","type","payload","isStart","isEnd","col","isPath","pathfindingAlgorithm","mazeAlgorithm","newMaze","Node","handleClick","handleMouseDown","useState","nodeStyle","setNodeStyle","useEffect","styles","base","unvisitable","draggable","className","onClick","onMouseDown","MemoizedNode","React","memo","ControlsTab","algorithm","handleAlgorithmChange","handleMazeChange","speed","handleSpeedChange","isStarted","setIsStarted","isAuto","setIsAuto","isAnimated","setIsAnimated","setIs8Way","dispatch","Grid","container","spacing","item","xs","sm","InputLabel","id","Select","labelId","value","fullWidth","onChange","MenuItem","Typography","variant","style","paddingTop","paddingBottom","Button","startIcon","Flag","disabled","Refresh","RadioRounded","Clear","FormControlLabel","control","Switch","color","label","checked","paddingLeft","Slider","step","max","marks","HelpTab","tab","setTab","maxHeight","overflow","Tabs","e","val","Tab","component","src","mazeGenerationImage","bfsImage","actionsImage","optionsImage","AboutTab","Paper","elevation","authorImage","href","Control","setSpeed","setAlgorithm","setMaze","page","setPage","Container","maxWidth","Card","CardHeader","title","subheader","AppBar","position","icon","CallToAction","Help","Info","CardContent","target","initialGrid","INITIAL_STATE","Context","createContext","GlobalContext","children","useReducer","dispatchCallback","useCallback","Provider","NodeGrid","useContext","setTimeout","visitable","Map","GridMemo","useMemo","ControlMemo","App","margin","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83107daa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Node_base__3IvIQ\",\"start\":\"Node_start__1Gnel\",\"dest\":\"Node_dest__3yL6Z\",\"unvisitable\":\"Node_unvisitable__wlSVh\",\"to-unvisitable\":\"Node_to-unvisitable__-_nTB\",\"visited\":\"Node_visited__YfAdS\",\"to-visited\":\"Node_to-visited__1UbrG\",\"path\":\"Node_path__PN09j\",\"to-path\":\"Node_to-path__267eO\",\"to-dest\":\"Node_to-dest__1bZf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-style\":\"ControlsTab_container-style__2wlYO\",\"node-info\":\"ControlsTab_node-info__3_CEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid-container\":\"Map_grid-container__2YzLb\",\"control-container\":\"Map_control-container__2Smc7\",\"main-container\":\"Map_main-container__1-f6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-style\":\"Control_container-style__3C4Aq\",\"node-info\":\"Control_node-info__12vLH\"};","import { CHANGE_START } from \"./reducer\";\nimport { PATHFINDING_ALGORITHMS, MAZE_ALGORITHMS } from \"../functions\";\n\nlet initialGrid = [];\n\nfor (let i = 0; i < 20; i++) {\n  initialGrid = [...initialGrid, []];\n  for (let j = 0; j < 20; j++) {\n    initialGrid[i] = [\n      ...initialGrid[i],\n      {\n        id: i * 20 + j,\n        x: j,\n        y: i,\n        nodeState: {\n          x: j,\n          y: i,\n          isPath: false,\n          isVisited: false,\n          isVisitable: true,\n          isStart: i === 0 && j === 0,\n          isEnd: i === 19 && j === 19,\n        },\n      },\n    ];\n  }\n}\n\nexport const INITIAL_STATE = {\n  grid: initialGrid,\n  start: {\n    x: 0,\n    y: 0,\n  },\n  dest: {\n    x: 19,\n    y: 19,\n  },\n  action: CHANGE_START,\n  pathfindingAlgorithm: PATHFINDING_ALGORITHMS.BFS,\n  mazeAlgorithm: MAZE_ALGORITHMS.simpleRandomMaze,\n};\n","export const isValidCoord = (coord) => {\n  return coord.x >= 0 && coord.y >= 0 && coord.x < 20 && coord.y < 20;\n};\n\nexport const isVisited = (coord, visited) => {\n  return (\n    visited.filter((el) => el.x === coord.x && el.y === coord.y).length !== 0\n  );\n};\n\nexport const isVisitable = (coord, grid) => {\n  return grid[coord.y][coord.x].nodeState.isVisitable;\n};\n\nexport const isReachable = (coord1, coord2, is8Way) => {\n  let xdist = Math.abs(coord1.x - coord2.x);\n  let ydist = Math.abs(coord1.y - coord2.y);\n  if (is8Way) {\n    return xdist <= 1 && ydist <= 1;\n  } else {\n    if (ydist <= 1 && coord1.x === coord2.x) return true;\n    if (xdist <= 1 && coord1.y === coord2.y) return true;\n  }\n};\n\nconst shuffle = (arr) => {\n  let currentIndex = arr.length;\n  let temporaryValue;\n  let randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = temporaryValue;\n  }\n\n  return arr;\n};\n\nexport const getAround = (coord, visited, map, is8Way) => {\n  const dx = [-1, -1, 0, 1, 1, 1, 0, -1];\n  const dy = [0, -1, -1, -1, 0, 1, 1, 1];\n\n  let retval = [];\n\n  for (let i = 0; i < 8; i = i + (is8Way ? 1 : 2)) {\n    let newCoord = { x: coord.x + dx[i], y: coord.y + dy[i] };\n    if (\n      isValidCoord(newCoord) &&\n      !isVisited(newCoord, visited) &&\n      isVisitable(newCoord, map)\n    ) {\n      retval.push(newCoord);\n    }\n  }\n\n  return retval;\n};\n\nexport const mazeGetAround = (coord, visited) => {\n  const dx = [0, 0, 2, -2];\n  const dy = [2, -2, 0, 0];\n  let retval = [];\n\n  for (let i = 0; i < 4; i++) {\n    let newCoord = { x: coord.x + dx[i], y: coord.y + dy[i] };\n    if (isValidCoord(newCoord) && !isVisited(newCoord, visited)) {\n      retval.push(newCoord);\n    }\n  }\n\n  return shuffle(retval);\n};\n\nexport const reconstructPath = (closed, is8Way) => {\n  let reversedClosed = [...closed].reverse();\n  let currentNodeIndex = 0;\n  let path = [reversedClosed[currentNodeIndex]];\n\n  for (let i = 1; i < reversedClosed.length; i++) {\n    if (\n      isReachable(reversedClosed[currentNodeIndex], reversedClosed[i], is8Way)\n    ) {\n      path.push(reversedClosed[i]);\n      currentNodeIndex = i;\n    }\n  }\n\n  return path;\n};\n\nexport const mazeBase = () => {\n  let maze = [];\n  let temp = [];\n\n  for (let i = 0; i < 20; i++) {\n    temp = [];\n    for (let j = 0; j < 20; j++) {\n      temp.push(j % 2 !== 0 ? (i % 2 === 0 ? \"#\" : \"*\") : \"#\");\n    }\n    maze.push(temp);\n  }\n\n  return maze;\n};\n\nexport const isSolved = (closed, dest) => {\n  return (\n    closed.filter((coord) => coord.x === dest.x && coord.y === dest.y)\n      .length !== 0\n  );\n};\n\nexport const isIn = isSolved;\n","import { getAround, isVisited, isSolved, reconstructPath } from \"./helper\";\n\nexport const BFSHelper = (start, dest, map, open = [], closed = [], is8Way) => {\n  open = [...getAround(start, closed, map, is8Way), ...open];\n  closed.push(start);\n\n  while (open.length !== 0) {\n    let next = open.pop();\n    if (isSolved(closed, dest)) {\n      break;\n    } else {\n      if (!isVisited(next, closed)) {\n        BFS(next, dest, map, open, closed, is8Way);\n      }\n    }\n  }\n};\n\nexport const BFS = (start, dest, map, open = [], closed = [], is8Way) => {\n  BFSHelper(start, dest, map, open, closed, is8Way);\n  if (isSolved(closed, dest)) {\n    return reconstructPath(closed, is8Way);\n  } else {\n    return [];\n  }\n};\n","import { getAround, isVisited, isSolved, reconstructPath } from \"./helper\";\n\nexport const DFSHelper = (start, dest, map, open = [], closed = [], is8Way) => {\n  open.push(...getAround(start, closed, map, is8Way));\n  closed.push(start);\n\n  while (open.length !== 0) {\n    let next = open.pop();\n    if (isSolved(closed, dest)) {\n      break;\n    } else {\n      if (!isVisited(next, closed)) {\n        DFS(next, dest, map, open, closed, is8Way);\n      }\n    }\n  }\n};\n\nexport const DFS = (start, dest, map, open = [], closed = [], is8Way) => {\n  DFSHelper(start, dest, map, open, closed, is8Way);\n  if (isSolved(closed, dest)) {\n    return reconstructPath(closed, dest, is8Way);\n  } else {\n    return [];\n  }\n};\n","import { getAround, isIn } from \"./helper\";\n\nexport const manhattanDistance = (dest, coord) => {\n  return Math.abs(dest.x - coord.x) + Math.abs(dest.y - coord.y);\n};\n\nexport const pythagoreanDistance = (dest, coord) => {\n  return Math.sqrt(\n    Math.abs(dest.x - coord.x) ** 2 + Math.abs(dest.y - coord.y) ** 2\n  );\n};\n\nexport const mininumFScoreOf = (scoreMatrix, nodes) => {\n  let min = nodes[0];\n  for (let i = 1; i < nodes.length; i++) {\n    if (scoreMatrix[nodes[i].y][nodes[i].x].f <= scoreMatrix[min.y][min.x].f) {\n      min = nodes[i];\n    }\n  }\n  return min;\n};\n\nexport const BaseAstar = (\n  start,\n  dest,\n  map,\n  open = [],\n  closed = [],\n  is8Way,\n  heuristicFunction\n) => {\n  let scoreMatrix = [];\n  let neighbors = [];\n  let temp = [];\n  let tempGScore;\n\n  for (let y = 0; y < 20; y++) {\n    temp = [];\n    for (let x = 0; x < 20; x++) {\n      if (start.x === x && start.y === y) {\n        temp.push({\n          g: 0,\n          f: heuristicFunction(dest, { x: x, y: y }),\n          parent: null,\n        });\n      } else {\n        temp.push({\n          g: 1000,\n          f: heuristicFunction(dest, { x: x, y: y }),\n          parent: null,\n        });\n      }\n    }\n    scoreMatrix.push(temp);\n  }\n\n  open = [start];\n\n  while (open.length !== 0) {\n    let current = mininumFScoreOf(scoreMatrix, open);\n    open = open.filter((node) => node.x !== current.x || node.y !== current.y);\n    closed.push(current);\n\n    if (current.x === dest.x && current.y === dest.y) {\n      let cur = current;\n      let retval = [];\n      while (scoreMatrix[cur.y][cur.x].parent !== null) {\n        retval.push(cur);\n        cur = scoreMatrix[cur.y][cur.x].parent;\n      }\n      return retval;\n    }\n\n    neighbors = getAround(current, closed, map, is8Way);\n\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor = neighbors[i];\n      tempGScore =\n        scoreMatrix[current.y][current.x].g +\n        pythagoreanDistance(current, neighbor);\n\n      if (\n        tempGScore < scoreMatrix[neighbor.y][neighbor.x].g ||\n        !isIn(open, neighbor)\n      ) {\n        scoreMatrix[neighbor.y][neighbor.x].parent = current;\n        scoreMatrix[neighbor.y][neighbor.x].g = tempGScore;\n        scoreMatrix[neighbor.y][neighbor.x].f =\n          tempGScore + heuristicFunction(dest, neighbor);\n\n        if (!isIn(open, neighbor)) {\n          open = [...open, neighbor];\n        }\n      }\n    }\n  }\n\n  return [];\n};\n\nexport const ManhattanAstar = (\n  start,\n  dest,\n  map,\n  open = [],\n  closed = [],\n  is8Way\n) => {\n  return BaseAstar(start, dest, map, open, closed, is8Way, manhattanDistance);\n};\n\nexport const PythagoreanAstar = (\n  start,\n  dest,\n  map,\n  open = [],\n  closed = [],\n  is8Way\n) => {\n  return BaseAstar(start, dest, map, open, closed, is8Way, pythagoreanDistance);\n};\n","import { mazeBase, mazeGetAround, isVisited } from \"./helper\";\n\nconst mazeDFS = (start, maze, visited = []) => {\n  visited.push(start);\n\n  while (mazeGetAround(start, visited).length !== 0) {\n    let startNew = mazeGetAround(start, visited).pop();\n    maze[(start.y + startNew.y) / 2][(start.x + startNew.x) / 2] = \"*\";\n    if (!isVisited(startNew, visited)) {\n      mazeDFS(startNew, maze, visited);\n    }\n  }\n};\n\nexport const recursiveBacktrackMaze = () => {\n  let retval = mazeBase();\n  mazeDFS({ x: 1, y: 1 }, retval);\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n  return retval;\n};\n","const chooseDirection = (width, height) => {\n  if (width > height) return \"v\";\n  if (height > width) return \"h\";\n  return Math.floor(Math.random() * 100) % 2 === 0 ? \"h\" : \"v\";\n};\n\nconst randomEven = (lower, upper) => {\n  let n = Math.floor((Math.random() * (upper - lower)) / 2);\n  let retval;\n\n  if (lower % 2 === 0) {\n    retval = lower + 2 * n;\n  } else {\n    retval = lower + 1 + 2 * n;\n  }\n  if (retval > upper) retval -= 2;\n  return retval;\n};\n\nconst randomOdd = (lower, upper) => {\n  let n = Math.floor((Math.random() * (upper - lower)) / 2);\n  let retval;\n\n  if (lower % 2 !== 0) {\n    retval = lower + 2 * n;\n  } else {\n    retval = lower + 1 + 2 * n;\n  }\n  if (retval > upper) retval -= 2;\n  return retval;\n};\n\nconst recursiveDivision = (maze, bounds) => {\n  let direction = chooseDirection(bounds.ux - bounds.lx, bounds.uy - bounds.ly);\n  let wall;\n  let hole;\n\n  if (direction === \"h\") {\n    wall = randomEven(bounds.ly, bounds.uy);\n    hole = randomOdd(bounds.lx, bounds.ux);\n\n    for (let i = bounds.lx; i < bounds.ux + 1; i++) {\n      maze[wall][i] = i === hole ? \"*\" : \"#\";\n    }\n  } else {\n    wall = randomEven(bounds.lx, bounds.ux);\n    hole = randomOdd(bounds.ly, bounds.uy);\n\n    for (let i = bounds.ly; i < bounds.uy + 1; i++) {\n      maze[i][wall] = i === hole ? \"*\" : \"#\";\n    }\n  }\n\n  if (bounds.ux - bounds.lx >= 1 && bounds.uy - bounds.ly >= 1) {\n    if (direction === \"h\") {\n      recursiveDivision(maze, {\n        ...bounds,\n        uy: wall - 1,\n      });\n      recursiveDivision(maze, {\n        ...bounds,\n        ly: wall + 1,\n      });\n    } else {\n      recursiveDivision(maze, {\n        ...bounds,\n        ux: wall - 1,\n      });\n      recursiveDivision(maze, {\n        ...bounds,\n        lx: wall + 1,\n      });\n    }\n  }\n};\n\nexport const recursiveDivisionMaze = () => {\n  let retval = [];\n  let temp = [];\n\n  for (let i = 0; i < 20; i++) {\n    temp = [];\n    for (let j = 0; j < 20; j++) {\n      temp.push(\"*\");\n    }\n    retval.push(temp);\n  }\n\n  recursiveDivision(retval, { lx: 0, ux: 19, ly: 0, uy: 19 });\n\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n\n  retval.forEach((row) => console.log(row.join(\"\")));\n\n  return retval;\n};\n","import { BFS } from \"./BFS\";\nimport { DFS } from \"./DFS\";\nimport { ManhattanAstar, PythagoreanAstar } from \"./Astar\";\nimport { Dijkstra } from \"./Dijkstra\";\nimport { emptyMaze } from \"./emptyMaze\";\nimport { simpleRandomMaze } from \"./simpleRandomMaze\";\nimport { recursiveBacktrackMaze } from \"./recursiveBacktrackMaze\";\nimport { recursiveDivisionMaze } from \"./recursiveDivisionMaze\";\n\nexport const PATHFINDING_ALGORITHMS = {\n  DFS: DFS,\n  BFS: BFS,\n  ManhattanAstar: ManhattanAstar,\n  PythagoreanAstar: PythagoreanAstar,\n  Dijkstra: Dijkstra,\n};\nexport const MAZE_ALGORITHMS = {\n  emptyMaze: emptyMaze,\n  simpleRandomMaze: simpleRandomMaze,\n  recursiveBacktrackMaze: recursiveBacktrackMaze,\n  recursiveDivisionMaze: recursiveDivisionMaze,\n};\n","import { BaseAstar } from \"./Astar\";\n\nexport const Dijkstra = (start, dest, map, open = [], closed = [], is8Way) => {\n  return BaseAstar(start, dest, map, open, closed, is8Way, () => 0);\n};\n","export const emptyMaze = () => {\n  let retval = [];\n  let temp = [];\n\n  for (let i = 0; i < 20; i++) {\n    temp = [];\n    for (let j = 0; j < 20; j++) {\n      temp.push(\"*\");\n    }\n    retval.push(temp);\n  }\n\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n\n  return retval;\n};\n","export const simpleRandomMaze = (w = 3) => {\n  let retval = [];\n  for (let i = 0; i < 20; i++) {\n    let temp = [];\n    for (let j = 0; j < 20; j++) {\n      Math.random() * 10 > w ? temp.push(\"*\") : temp.push(\"#\");\n    }\n    retval.push(temp);\n  }\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"s\";\n  retval[Math.floor(Math.random() * 20)][Math.floor(Math.random() * 20)] = \"d\";\n\n  console.log(retval);\n  return retval;\n};\n","import { PATHFINDING_ALGORITHMS, MAZE_ALGORITHMS } from \"../functions\";\n\nexport const CHANGE_PATHFINDING_ALGORITHM = \"CHANGE_PATHFINDING_ALGORITHM\";\nexport const CHANGE_MAZE_ALGORITHM = \"CHANGE_MAZE_ALGORITHM\";\nexport const CHANGE_VISITABLE_FALSE = \"CHANGE_VISITABLE_FALSE\";\nexport const CHANGE_VISITABLE_TRUE = \"CHANGE_VISITABLE_TRUE\";\nexport const GENERATE_MAZE = \"GENERATE_MAZE\";\nexport const CHANGE_VISITED_FALSE = \"CHANGE_VISITED_FALSE\";\nexport const CHANGE_VISITED_TRUE = \"CHANGE_VISITED_TRUE\";\nexport const CHANGE_PATH_FALSE = \"CHANGE_PATH_FALSE\";\nexport const CHANGE_PATH_TRUE = \"CHANGE_PATH_TRUE\";\nexport const CHANGE_ACTION = \"CHANGE_ACTION\";\nexport const CHANGE_START = \"CHANGE_START\";\nexport const CHANGE_DEST = \"CHANGE_DEST\";\nexport const CLEAR = \"CLEAR\";\nexport const RESET = \"RESET\";\n\nexport const reducer = (state, action) => {\n  const newState = { ...state };\n\n  switch (action.type) {\n    case CHANGE_ACTION:\n      newState.action = action.payload;\n      break;\n    case CHANGE_START:\n      newState.grid[state.start.y][state.start.x].nodeState.isStart = false;\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isStart = true;\n      newState.start = {\n        x: action.payload.x,\n        y: action.payload.y,\n      };\n      break;\n    case CHANGE_DEST:\n      newState.grid[state.dest.y][state.dest.x].nodeState.isEnd = false;\n      newState.grid[action.payload.y][action.payload.x].nodeState.isEnd = true;\n      newState.dest = {\n        x: action.payload.x,\n        y: action.payload.y,\n      };\n      break;\n    case RESET:\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isPath: false,\n          },\n        }))\n      );\n      break;\n    case CLEAR:\n      newState.grid[state.start.y][state.start.x].nodeState.isStart = false;\n      newState.grid[state.dest.y][state.dest.x].nodeState.isEnd = false;\n      newState.grid[0][0].nodeState.isStart = true;\n      newState.grid[19][19].nodeState.isEnd = true;\n      newState.start = { x: 0, y: 0 };\n      newState.dest = { x: 19, y: 19 };\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isVisitable: true,\n            isPath: false,\n          },\n        }))\n      );\n      break;\n    case CHANGE_VISITABLE_TRUE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisitable = true;\n      break;\n    case CHANGE_VISITABLE_FALSE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisitable = false;\n      break;\n    case CHANGE_VISITED_TRUE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisited = true;\n      break;\n    case CHANGE_VISITED_FALSE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isVisited = false;\n      break;\n    case CHANGE_PATH_TRUE:\n      newState.grid[action.payload.y][action.payload.x].nodeState.isPath = true;\n      break;\n    case CHANGE_PATH_FALSE:\n      newState.grid[action.payload.y][\n        action.payload.x\n      ].nodeState.isPath = false;\n      break;\n    case CHANGE_PATHFINDING_ALGORITHM:\n      newState.pathfindingAlgorithm = PATHFINDING_ALGORITHMS[action.payload];\n      break;\n    case CHANGE_MAZE_ALGORITHM:\n      newState.mazeAlgorithm = MAZE_ALGORITHMS[action.payload];\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isVisitable: true,\n            isPath: false,\n          },\n        }))\n      );\n      let maze = newState.mazeAlgorithm();\n      for (let i = 0; i < 20; i++) {\n        for (let j = 0; j < 20; j++) {\n          switch (maze[i][j]) {\n            case \"#\":\n              newState.grid[j][i].nodeState.isVisitable = false;\n              break;\n            case \"*\":\n              newState.grid[j][i].nodeState.isVisitable = true;\n              break;\n            case \"s\":\n              newState.grid[j][i].nodeState.isStart = true;\n              newState.grid[newState.start.y][\n                newState.start.x\n              ].nodeState.isStart = false;\n              newState.start = { x: i, y: j };\n              break;\n            case \"d\":\n              newState.grid[j][i].nodeState.isEnd = true;\n              newState.grid[newState.dest.y][\n                newState.dest.x\n              ].nodeState.isEnd = false;\n              newState.dest = { x: i, y: j };\n              break;\n            default:\n              break;\n          }\n        }\n      }\n      break;\n    case GENERATE_MAZE:\n      let newMaze = newState.mazeAlgorithm();\n      newState.grid = newState.grid.map((row) =>\n        row.map((col) => ({\n          ...col,\n          nodeState: {\n            ...col.nodeState,\n            isVisited: false,\n            isVisitable: true,\n            isPath: false,\n          },\n        }))\n      );\n      for (let i = 0; i < 20; i++) {\n        for (let j = 0; j < 20; j++) {\n          switch (newMaze[i][j]) {\n            case \"#\":\n              newState.grid[j][i].nodeState.isVisitable = false;\n              break;\n            case \"*\":\n              newState.grid[j][i].nodeState.isVisitable = true;\n              break;\n            case \"s\":\n              newState.grid[j][i].nodeState.isStart = true;\n              newState.grid[newState.start.y][\n                newState.start.x\n              ].nodeState.isStart = false;\n              newState.start = { x: i, y: j };\n              break;\n            case \"d\":\n              newState.grid[j][i].nodeState.isEnd = true;\n              newState.grid[newState.dest.y][\n                newState.dest.x\n              ].nodeState.isEnd = false;\n              newState.dest = { x: i, y: j };\n              break;\n            default:\n              break;\n          }\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return newState;\n};\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Node.module.css\";\n\nconst Node = ({ handleClick, handleMouseDown, nodeState }) => {\n  const [nodeStyle, setNodeStyle] = useState(\"\");\n\n  useEffect(() => {\n    if (nodeState.isEnd) {\n      setNodeStyle(styles.dest);\n    } else if (nodeState.isPath && !nodeState.isStart) {\n      setNodeStyle(styles.path);\n    } else if (nodeState.isVisited && !nodeState.isStart) {\n      setNodeStyle(styles.visited);\n    } else if (nodeState.isStart) {\n      setNodeStyle(styles.start);\n    } else if (!nodeState.isVisitable) {\n      setNodeStyle(styles.unvisitable);\n    } else {\n      setNodeStyle(styles.base);\n    }\n  }, [\n    nodeState.isStart,\n    nodeState.isEnd,\n    nodeState.isVisitable,\n    nodeState.isVisited,\n    nodeState.isPath,\n  ]);\n\n  return (\n    <div\n      draggable={false}\n      className={nodeStyle}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    ></div>\n  );\n};\n\nexport const MemoizedNode = React.memo(Node);\n\nexport default Node;\n","import React from \"react\";\n\nimport {\n  Button,\n  Grid,\n  Select,\n  MenuItem,\n  InputLabel,\n  Typography,\n  FormControlLabel,\n  Switch,\n  Slider,\n} from \"@material-ui/core\";\nimport { Clear, Flag, RadioRounded, Refresh } from \"@material-ui/icons\";\nimport Node from \"./Node\";\nimport styles from \"./ControlsTab.module.css\";\nimport {\n  CHANGE_DEST,\n  CHANGE_START,\n  CHANGE_VISITABLE_TRUE,\n  CHANGE_VISITABLE_FALSE,\n  CHANGE_ACTION,\n  RESET,\n  GENERATE_MAZE,\n} from \"../store/reducer\";\n\nconst ControlsTab = ({\n  algorithm,\n  handleAlgorithmChange,\n  maze,\n  handleMazeChange,\n  speed,\n  handleSpeedChange,\n  isStarted,\n  setIsStarted,\n  isAuto,\n  setIsAuto,\n  isAnimated,\n  setIsAnimated,\n  is8Way,\n  setIs8Way,\n  dispatch,\n}) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={6}>\n        <InputLabel id=\"alg-label\">Select Algorithm</InputLabel>\n        <Select\n          labelId=\"alg-label\"\n          value={algorithm}\n          fullWidth={true}\n          onChange={handleAlgorithmChange}\n        >\n          <MenuItem value=\"BFS\">Breadth First Search</MenuItem>\n          <MenuItem value=\"DFS\">Depth First Search</MenuItem>\n          <MenuItem value=\"ManhattanAstar\">A* Algorithm (Manhattan)</MenuItem>\n          <MenuItem value=\"PythagoreanAstar\">\n            A* Algorithm (Pythagorean)\n          </MenuItem>\n          <MenuItem value=\"Dijkstra\">Dijkstra's Algorithm</MenuItem>\n        </Select>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <InputLabel id=\"alg-label\">Select Maze Generator</InputLabel>\n        <Select\n          labelId=\"alg-label\"\n          fullWidth={true}\n          onChange={handleMazeChange}\n          value={maze}\n        >\n          <MenuItem value=\"emptyMaze\">Empty Maze</MenuItem>\n          <MenuItem value=\"simpleRandomMaze\">Simple Random Maze</MenuItem>\n          <MenuItem value=\"recursiveBacktrackMaze\">\n            Recursive Backtrack Maze\n          </MenuItem>\n          <MenuItem value=\"recursiveDivisionMaze\">\n            Recursive Division Maze\n          </MenuItem>\n        </Select>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography\n          variant=\"h5\"\n          style={{ paddingTop: \"2rem\", paddingBottom: \"1rem\" }}\n        >\n          Actions\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          startIcon={<Flag />}\n          onClick={() => setIsStarted(true)}\n          disabled={isStarted}\n        >\n          Start\n        </Button>\n        <Button\n          variant=\"outlined\"\n          startIcon={<Refresh />}\n          onClick={() => dispatch({ type: RESET })}\n          disabled={isStarted}\n        >\n          Reset\n        </Button>\n        <Button\n          variant=\"outlined\"\n          startIcon={<RadioRounded />}\n          onClick={() => dispatch({ type: GENERATE_MAZE })}\n          disabled={isStarted}\n        >\n          Maze\n        </Button>\n        <Button\n          variant=\"outlined\"\n          startIcon={<Clear />}\n          onClick={() => dispatch({ type: \"CLEAR\" })}\n          disabled={isStarted}\n        >\n          Clear\n        </Button>\n        <Typography\n          variant=\"h5\"\n          style={{ paddingTop: \"2rem\", paddingBottom: \"1rem\" }}\n        >\n          Options\n        </Typography>\n        <FormControlLabel\n          control={<Switch color=\"primary\" />}\n          label=\"Enable Animation\"\n          checked={isAuto ? false : isAnimated}\n          onChange={() => setIsAnimated(isAuto ? false : !isAnimated)}\n          disabled={isAuto}\n        />\n        <br />\n        <FormControlLabel\n          control={<Switch color=\"primary\" />}\n          label=\"Auto Solve\"\n          checked={isAuto}\n          onChange={() => setIsAuto(!isAuto)}\n        />\n        <br />\n        <FormControlLabel\n          control={<Switch color=\"primary\" />}\n          label=\"8 Way Movement\"\n          checked={is8Way}\n          onChange={() => setIs8Way(!is8Way)}\n        />\n        <br />\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8} style={{ paddingLeft: \"2rem\" }}>\n            <br />\n            <Typography>Animation Speed</Typography>\n            <Slider\n              disabled={isStarted || !isAnimated || isAuto}\n              value={speed}\n              onChange={handleSpeedChange}\n              step={1}\n              min={-2}\n              max={2}\n              marks={[\n                {\n                  value: -2,\n                  label: \"0.03s\",\n                },\n                {\n                  value: -1,\n                  label: \"0.05s\",\n                },\n                {\n                  value: 0,\n                  label: \"0.1s\",\n                },\n                {\n                  value: 1,\n                  label: \"0.2s\",\n                },\n                {\n                  value: 2,\n                  label: \"0.4s\",\n                },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"h5\" style={{ paddingTop: \"2rem\" }}>\n          Legend\n        </Typography>\n        <div\n          className={styles[\"node-info\"]}\n          onClick={() =>\n            dispatch({\n              type: CHANGE_ACTION,\n              payload: CHANGE_START,\n            })\n          }\n        >\n          <Node nodeState={{ isStart: true }} />\n          <Typography variant=\"body1\" style={{ paddingLeft: \"1rem\" }}>\n            Start Node\n          </Typography>\n        </div>\n        <div\n          className={styles[\"node-info\"]}\n          onClick={() =>\n            dispatch({\n              type: CHANGE_ACTION,\n              payload: CHANGE_DEST,\n            })\n          }\n        >\n          <Node nodeState={{ isEnd: true }} />\n          <Typography variant=\"body1\" style={{ paddingLeft: \"1rem\" }}>\n            Destination Node\n          </Typography>\n        </div>\n        <div\n          className={styles[\"node-info\"]}\n          onClick={() =>\n            dispatch({\n              type: CHANGE_ACTION,\n              payload: CHANGE_VISITABLE_TRUE,\n            })\n          }\n        >\n          <Node nodeState={{ isVisitable: true }} />\n          <Typography variant=\"body1\" style={{ paddingLeft: \"1rem\" }}>\n            Unvisited Node\n          </Typography>\n        </div>\n        <div\n          className={styles[\"node-info\"]}\n          onClick={() =>\n            dispatch({\n              type: CHANGE_ACTION,\n              payload: CHANGE_VISITABLE_FALSE,\n            })\n          }\n        >\n          <Node nodeState={{ isVisitable: false }} />\n          <Typography variant=\"body1\" style={{ paddingLeft: \"1rem\" }}>\n            Unvisitable Node\n          </Typography>\n        </div>\n        <div className={styles[\"node-info\"]}>\n          <Node nodeState={{ isVisited: true }} />\n          <Typography variant=\"body1\" style={{ paddingLeft: \"1rem\" }}>\n            Visited Node\n          </Typography>\n        </div>\n        <div className={styles[\"node-info\"]}>\n          <Node nodeState={{ isPath: true }} />\n          <Typography variant=\"body1\" style={{ paddingLeft: \"1rem\" }}>\n            Path Node\n          </Typography>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ControlsTab;\n","export default __webpack_public_path__ + \"static/media/mazes.40141f11.gif\";","export default __webpack_public_path__ + \"static/media/bfs.adb49646.gif\";","export default __webpack_public_path__ + \"static/media/8way.e5d337be.gif\";","export default __webpack_public_path__ + \"static/media/actions.a95faffe.gif\";","export default __webpack_public_path__ + \"static/media/options.515cdc4e.gif\";","import React, { useState } from \"react\";\nimport { Grid, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport mazeGenerationImage from \"../assets/mazes.gif\";\nimport eightWayImage from \"../assets/8way.gif\";\nimport bfsImage from \"../assets/bfs.gif\";\nimport actionsImage from \"../assets/actions.gif\";\nimport optionsImage from \"../assets/options.gif\";\n\nconst HelpTab = () => {\n  const [tab, setTab] = useState(0);\n\n  const handleTabChange = (e, val) => {\n    setTab(val);\n  };\n\n  return (\n    <Grid container spacing={3} style={{ maxHeight: \"70vh\", overflow: \"auto\" }}>\n      <Grid item xs={12}>\n        <Tabs value={tab} onChange={handleTabChange}>\n          <Tab label=\"Intro\" />\n          <Tab label=\"Selections\" />\n          <Tab label=\"Actions\" />\n          <Tab label=\"Options\" />\n        </Tabs>\n      </Grid>\n      {tab === 0 ? (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">A Quick Intro</Typography>\n            <br />\n            <Typography variant=\"body1\">\n              That big blue grid you see is called the map. It consists of 400\n              squares called \"nodes\" which are subdivided into 6 categories\n              which are:\n            </Typography>\n            <ol>\n              <Typography component=\"li\" variant=\"body1\">\n                Start Node, the node you came from\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                Destination Node, the node you want to go to\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                Unvisited Node, nodes that can be visited\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                Unvisitedable Node, nodes that cannot be visited\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                Visited Node, nodes that are visited by the algorithm when\n                searching for the path\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                Path Node, nodes that shows you the path found by the algorithm\n              </Typography>\n            </ol>\n            <Typography variant=\"body1\">\n              To get started quickly, the author suggest that you generate a\n              maze first by clicking the \"Maze\" button and starting the\n              visualization by clicking the \"Start\" button\n            </Typography>\n          </Grid>\n        </>\n      ) : tab === 1 ? (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Selctions You Can Pick</Typography>\n          </Grid>\n          <br />\n          <Grid item xs={12} sm={3}>\n            <img src={mazeGenerationImage} width=\"100%\" />\n            <Typography component=\"em\" variant=\"caption\">\n              Fig. 2.1 Maze generation in action\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={9}>\n            <Typography variant=\"h6\">Maze Generation</Typography>\n            <Typography variant=\"body1\">\n              You can edit the map manually by clicking the node you want to\n              add/change in the \"Legend\" and then clicking on the map itself.\n              You can also generate a map by selecting the maze generation\n              algorithm and clicking the \"Maze\" button on the controls panel.\n              Each time you change the maze generation algorithm or click the\n              maze \"Button\", a new maze will be generated on the map. Each maze\n              generation algorithm will generate a map with a distinct\n              characteristic.\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} sm={3}>\n            <img src={bfsImage} width=\"100%\" />\n            <Typography component=\"em\" variant=\"caption\">\n              Fig. 2.3 Breadth First Search in action\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} sm={9}>\n            <Typography variant=\"h6\">Pathfinding Algorithms Option</Typography>\n            <Typography variant=\"body1\">\n              There are many ways to find a path between two points each with\n              it's own pros and cons. You can choose how you want to find said\n              path by choosing which algorithm you are to use in the controls\n              panel. By default, Breadth First Seach is chosen, but feel free to\n              explore the other algorithms at your disposal. If a path from the\n              start node to the destination node is found, you will see some\n              nodes turn to green to indicate said found path.\n            </Typography>\n          </Grid>\n        </>\n      ) : tab === 2 ? (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Actions You Can Take</Typography>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <img src={actionsImage} width=\"100%\" />\n            <br />\n            <Typography variant=\"caption\">Fig 2.4 Choosing action</Typography>\n          </Grid>\n          <Grid item xs={12} sm={9}>\n            <Typography variant=\"body1\">\n              There are four main actions you can take which are \"Start\",\n              \"Reset\", \"Maze\", and \"Clear\". If animation is enabled, you cannot\n              take any action until the visualization is over.\n            </Typography>\n            <ol>\n              <Typography component=\"li\" variant=\"body1\">\n                \"Start\" action is taken when you want to start the\n                visualization.\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                \"Reset\" action is taken when you want to clear the visited and\n                path nodes.\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                \"Maze\" action is taken when you want to generate a new maze on\n                the map.\n              </Typography>\n              <Typography component=\"li\" variant=\"body1\">\n                \"Clear\" action is taken when you want to have an empty map\n                again.\n              </Typography>\n            </ol>\n          </Grid>\n        </>\n      ) : tab === 3 ? (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Options You Can Set</Typography>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <img src={optionsImage} width=\"100%\" />\n            <br />\n            <Typography variant=\"caption\">Fig 2.5 Setting action</Typography>\n          </Grid>\n          <Grid item xs={12} sm={9}>\n            <Typography variant=\"body1\">\n              There are three options that you can set to your liking. The\n              \"Enable Animation\" option is pretty self explanatory. The \"Auto\n              Solve\" option, when enabled, will solve the map automatically\n              whenever you make changes to either the algorithm choice, maze\n              generator choice, or the map content. The \"8 Way Movement\" option\n              allows the algorithm to take a diagonal path when doing its job.\n              Note that \"Enable Animation\" is automatically set to disabled when\n              \"Auto Solve\" is enabled.\n            </Typography>\n          </Grid>\n        </>\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default HelpTab;\n","export default __webpack_public_path__ + \"static/media/author.3b24c736.jpg\";","import React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport authorImage from \"../assets/author.jpg\";\n\nconst AboutTab = () => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={3}>\n        <Paper elevation={4}>\n          <img src={authorImage} width=\"100%\" />\n        </Paper>\n        <br />\n        <Typography variant=\"caption\" component=\"em\">\n          Figure 1.1 The author's face\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Typography variant=\"h5\">A Little Bit of Something</Typography>\n        <Typography variant=\"subtitle1\">About this project...</Typography>\n        <br />\n        <Typography variant=\"body1\">\n          This project is dedicated in aiding the process of understanding{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Pathfinding\">\n            pathfinding algorithms\n          </a>\n          , both for the author and for you, by means of visualization. Crudely\n          speaking, pathfinding algorithms are algorithms that searches for a\n          path between two points (in this case the start node and the\n          destination node). These pathfinding algorithms have found their uses\n          in many fields such as navigation, search algorithms, game design etc.\n          This project is written by the handsome young man in Figure 1.1 and is\n          inspired by Clément Mihailescu's video which you can watch by clicking{\" \"}\n          <a href=\"https://www.youtube.com/watch?v=n4t_-NjY_Sg&t=771s\">\n            this link.\n          </a>{\" \"}\n          The entire source code of this project are made public and can be\n          found in{\" \"}\n          <a href=\"https://github.com/ubbeg2000/pathfinding-demo/\">\n            this repository.\n          </a>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AboutTab;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n  Tabs,\n  Tab,\n  AppBar,\n} from \"@material-ui/core\";\nimport { CallToAction, Help, Info } from \"@material-ui/icons\";\nimport styles from \"./Control.module.css\";\nimport {\n  CHANGE_PATHFINDING_ALGORITHM,\n  CHANGE_MAZE_ALGORITHM,\n} from \"../store/reducer\";\nimport ControlsTab from \"./ControlsTab\";\nimport HelpTab from \"./HelpTab\";\nimport AboutTab from \"./AboutTab\";\n\nconst Control = ({\n  speed,\n  setSpeed,\n  isAuto,\n  setIsAuto,\n  isAnimated,\n  setIsAnimated,\n  isStarted,\n  setIsStarted,\n  is8Way,\n  setIs8Way,\n  dispatch,\n}) => {\n  const [algorithm, setAlgorithm] = useState(\"BFS\");\n  const [maze, setMaze] = useState(\"simpleRandomMaze\");\n  const [page, setPage] = useState(0);\n\n  const handleAlgorithmChange = (e) => {\n    setAlgorithm(e.target.value);\n    dispatch({\n      type: CHANGE_PATHFINDING_ALGORITHM,\n      payload: e.target.value,\n    });\n  };\n\n  const handleMazeChange = (e) => {\n    dispatch({ type: \"CLEAR\" });\n    setMaze(e.target.value);\n    dispatch({\n      type: CHANGE_MAZE_ALGORITHM,\n      payload: e.target.value,\n    });\n  };\n\n  const handleSpeedChange = (e, val) => {\n    setSpeed(val);\n  };\n\n  const handlePageChange = (e, val) => {\n    setPage(val);\n  };\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\" className={styles[\"container-style\"]}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Card elevation={3}>\n              <CardHeader\n                title={\"Pathfinding Demo\"}\n                subheader=\"A visualization of pathfinding and maze-generating algorithms\"\n              />\n              <AppBar position=\"static\" color=\"white\" elevation={0}>\n                <Tabs value={page} onChange={handlePageChange}>\n                  <Tab icon={<CallToAction />} label=\"controls\" />\n                  <Tab icon={<Help />} label=\"help\" />\n                  <Tab icon={<Info />} label=\"about\" />\n                </Tabs>\n              </AppBar>\n              <br />\n              <CardContent>\n                {page === 0 ? (\n                  <ControlsTab\n                    algorithm={algorithm}\n                    handleAlgorithmChange={handleAlgorithmChange}\n                    maze={maze}\n                    handleMazeChange={handleMazeChange}\n                    speed={speed}\n                    handleSpeedChange={handleSpeedChange}\n                    isStarted={isStarted}\n                    setIsStarted={setIsStarted}\n                    isAuto={isAuto}\n                    setIsAuto={setIsAuto}\n                    isAnimated={isAnimated}\n                    setIsAnimated={setIsAnimated}\n                    is8Way={is8Way}\n                    setIs8Way={setIs8Way}\n                    dispatch={dispatch}\n                  />\n                ) : page === 1 ? (\n                  <HelpTab />\n                ) : page === 2 ? (\n                  <AboutTab />\n                ) : null}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Control;\n","import React, { createContext, useReducer, useCallback } from \"react\";\nimport { INITIAL_STATE } from \"./initialState\";\nimport { reducer } from \"./reducer\";\n\nexport const Context = createContext(null);\n\nexport const GlobalContext = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, { ...INITIAL_STATE });\n\n  const dispatchCallback = useCallback((action) => {\n    dispatch(action);\n  }, []);\n\n  return (\n    <Context.Provider value={{ state: state, dispatch: dispatchCallback }}>\n      {children}\n    </Context.Provider>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { MemoizedNode } from \"./Node\";\nimport { Context } from \"../store/context\";\nimport {\n  CHANGE_DEST,\n  CHANGE_START,\n  CHANGE_VISITABLE_TRUE,\n  CHANGE_VISITABLE_FALSE,\n  CHANGE_VISITED_TRUE,\n  CHANGE_PATH_TRUE,\n  RESET,\n} from \"../store/reducer\";\n\nconst NodeGrid = ({\n  speed,\n  isAuto,\n  isAnimated,\n  isStarted,\n  setIsStarted,\n  is8Way,\n}) => {\n  const { state, dispatch } = useContext(Context);\n\n  useEffect(() => {\n    if (isStarted || isAuto) {\n      dispatch({ type: RESET });\n      let closed = [];\n      let open = [];\n      let path = [];\n\n      path = state.pathfindingAlgorithm(\n        state.start,\n        state.dest,\n        state.grid,\n        open,\n        closed,\n        is8Way\n      );\n\n      if (isAnimated && !isAuto) {\n        for (let i = 0; i < closed.length; i++) {\n          setTimeout(\n            () =>\n              dispatch({\n                type: CHANGE_VISITED_TRUE,\n                payload: { x: closed[i].x, y: closed[i].y },\n              }),\n            100 * 2 ** speed * i\n          );\n        }\n        if (path.length !== 0) {\n          setTimeout(() => {\n            for (let i = 0; i < path.length; i++) {\n              setTimeout(\n                () =>\n                  dispatch({\n                    type: CHANGE_PATH_TRUE,\n                    payload: { x: path[i].x, y: path[i].y },\n                  }),\n                100 * 2 ** speed * i\n              );\n            }\n          }, 100 * 2 ** speed * closed.length);\n        }\n\n        setTimeout(\n          () => setIsStarted(false),\n          100 * 2 ** speed * (closed.length + path.length)\n        );\n      } else {\n        for (let i = 0; i < closed.length; i++) {\n          dispatch({\n            type: CHANGE_VISITED_TRUE,\n            payload: { x: closed[i].x, y: closed[i].y },\n          });\n        }\n        if (path.length !== 0) {\n          for (let i = 0; i < path.length; i++) {\n            dispatch({\n              type: CHANGE_PATH_TRUE,\n              payload: { x: path[i].x, y: path[i].y },\n            });\n          }\n        }\n        setIsStarted(false);\n      }\n    }\n  }, [\n    isStarted,\n    isAnimated,\n    isAuto,\n    is8Way,\n    state.dest,\n    state.start,\n    state.pathfindingAlgorithm,\n  ]);\n\n  const handleClick = (x, y) => {\n    if (state.action === CHANGE_DEST || state.action === CHANGE_START)\n      dispatch({\n        type: state.action,\n        payload: { x, y },\n      });\n  };\n\n  const handleMouseDown = (x, y) => {\n    if (state.action === CHANGE_VISITABLE_TRUE) {\n      dispatch({\n        type: state.action,\n        payload: { x, y, visitable: true },\n      });\n    } else if (state.action === CHANGE_VISITABLE_FALSE) {\n      dispatch({\n        type: state.action,\n        payload: { x, y, visitable: false },\n      });\n    }\n  };\n\n  return (\n    <>\n      {state.grid.map((row) =>\n        row.map((col) => (\n          <MemoizedNode\n            handleClick={() => handleClick(col.x, col.y)}\n            handleMouseDown={() => handleMouseDown(col.x, col.y)}\n            key={col.id}\n            nodeState={col.nodeState}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nexport default NodeGrid;\n","import React, { useState, useMemo, useContext } from \"react\";\nimport styles from \"./Map.module.css\";\nimport Control from \"./Control\";\nimport NodeGrid from \"./NodeGrid\";\nimport { Context } from \"../store/context\";\n\nconst Map = () => {\n  const { dispatch } = useContext(Context);\n  const [speed, setSpeed] = useState(0);\n  const [is8Way, setIs8Way] = useState(false);\n  const [isAuto, setIsAuto] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(true);\n\n  const GridMemo = useMemo(\n    () => (\n      <NodeGrid\n        speed={speed}\n        isAuto={isAuto}\n        isAnimated={isAnimated}\n        isStarted={isStarted}\n        setIsStarted={setIsStarted}\n        is8Way={is8Way}\n      />\n    ),\n    [speed, isAuto, isAnimated, isStarted, setIsStarted, is8Way]\n  );\n\n  const ControlMemo = useMemo(\n    () => (\n      <Control\n        speed={speed}\n        setSpeed={setSpeed}\n        isAuto={isAuto}\n        setIsAuto={setIsAuto}\n        isAnimated={isAnimated}\n        setIsAnimated={setIsAnimated}\n        isStarted={isStarted}\n        setIsStarted={setIsStarted}\n        is8Way={is8Way}\n        setIs8Way={setIs8Way}\n        dispatch={dispatch}\n      />\n    ),\n    [\n      speed,\n      setSpeed,\n      isAuto,\n      setIsAuto,\n      isAnimated,\n      setIsAnimated,\n      isStarted,\n      setIsStarted,\n      is8Way,\n      setIs8Way,\n      dispatch,\n    ]\n  );\n\n  return (\n    <>\n      <div className={styles[\"main-container\"]}>\n        <div className={styles[\"grid-container\"]} draggable={false}>\n          {GridMemo}\n        </div>\n        <div className={styles[\"control-container\"]}>{ControlMemo}</div>\n      </div>\n    </>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport Map from \"./components/Map\";\nimport { GlobalContext } from \"./store/context\";\n\nconst App = () => {\n  return (\n    <div style={{ margin: 0, padding: 0 }}>\n      <GlobalContext>\n        <Map />\n      </GlobalContext>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}